import{_ as e,c as a,a0 as i,o as s}from"./chunks/framework.DZKAnWaX.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/extract-pg-schema.viewdetails.md","filePath":"api/extract-pg-schema.viewdetails.md"}'),p={name:"api/extract-pg-schema.viewdetails.md"};function r(h,t,n,o,d,l){return s(),a("div",null,t[0]||(t[0]=[i('<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.viewdetails.html">ViewDetails</a></p><h2 id="viewdetails-interface" tabindex="-1">ViewDetails interface <a class="header-anchor" href="#viewdetails-interface" aria-label="Permalink to &quot;ViewDetails interface&quot;">​</a></h2><p>View in a schema.</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ViewDetails</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PgType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;view&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>Extends:</strong> <a href="./extract-pg-schema.pgtype.html">PgType</a>&lt;&quot;view&quot;&gt;</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table><thead><tr><th><p>Property</p></th><th><p>Modifiers</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p><a href="./extract-pg-schema.viewdetails.columns.html">columns</a></p></td><td></td><td><p><a href="./extract-pg-schema.viewcolumn.html">ViewColumn</a>[]</p></td><td><p>Columns in the view.</p></td></tr><tr><td><p><a href="./extract-pg-schema.viewdetails.definition.html">definition</a></p></td><td></td><td><p>string</p></td><td><p>The SQL definition of the view.</p></td></tr><tr><td><p><a href="./extract-pg-schema.viewdetails.informationschemavalue.html">informationSchemaValue</a></p></td><td></td><td><p><a href="./extract-pg-schema.informationschemaview.html">InformationSchemaView</a></p></td><td><p>Information schema value for the view.</p></td></tr><tr><td><p><a href="./extract-pg-schema.viewdetails.options.html">options</a></p></td><td></td><td><p>{ checkOption: &quot;local&quot; | &quot;cascaded&quot; | null; securityBarrier: boolean; securityInvoker: boolean; }</p></td><td><p>View options</p></td></tr></tbody></table>',8)]))}const g=e(p,[["render",r]]);export{m as __pageData,g as default};
