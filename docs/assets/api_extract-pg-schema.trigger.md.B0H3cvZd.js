import{_ as e,c as r,o as a,ae as i}from"./chunks/framework.49ZIXp9w.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/extract-pg-schema.trigger.md","filePath":"api/extract-pg-schema.trigger.md"}'),p={name:"api/extract-pg-schema.trigger.md"};function d(n,t,o,g,h,s){return a(),r("div",null,t[0]||(t[0]=[i('<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.trigger.html">Trigger</a></p><h2 id="trigger-interface" tabindex="-1">Trigger interface <a class="header-anchor" href="#trigger-interface" aria-label="Permalink to &quot;Trigger interface&quot;">​</a></h2><p>Trigger on a table or view.</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Trigger</span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table><thead><tr><th><p>Property</p></th><th><p>Modifiers</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p><a href="./extract-pg-schema.trigger.actiontiming.html">actionTiming</a></p></td><td></td><td><p>&quot;BEFORE&quot; | &quot;AFTER&quot; | &quot;INSTEAD OF&quot;</p></td><td><p>Timing of the trigger (BEFORE, AFTER, INSTEAD OF).</p></td></tr><tr><td><p><a href="./extract-pg-schema.trigger.comment.html">comment</a></p></td><td></td><td><p>string | null</p></td><td><p>Comment on the trigger, if any.</p></td></tr><tr><td><p><a href="./extract-pg-schema.trigger.condition.html">condition</a></p></td><td></td><td><p>string | null</p></td><td><p>WHEN condition for the trigger, if any.</p></td></tr><tr><td><p><a href="./extract-pg-schema.trigger.enabled.html">enabled</a></p></td><td></td><td><p>boolean</p></td><td><p>Whether the trigger is enabled.</p></td></tr><tr><td><p><a href="./extract-pg-schema.trigger.eventmanipulation.html">eventManipulation</a></p></td><td></td><td><p>(&quot;INSERT&quot; | &quot;UPDATE&quot; | &quot;DELETE&quot; | &quot;TRUNCATE&quot;)[]</p></td><td><p>Events that fire the trigger (INSERT, UPDATE, DELETE, TRUNCATE).</p></td></tr><tr><td><p><a href="./extract-pg-schema.trigger.functionargs.html">functionArgs</a></p></td><td></td><td><p>string[]</p></td><td><p>Arguments passed to the function.</p></td></tr><tr><td><p><a href="./extract-pg-schema.trigger.functionname.html">functionName</a></p></td><td></td><td><p>string</p></td><td><p>Name of the function called by the trigger.</p></td></tr><tr><td><p><a href="./extract-pg-schema.trigger.functionschema.html">functionSchema</a></p></td><td></td><td><p>string</p></td><td><p>Schema of the function called by the trigger.</p></td></tr><tr><td><p><a href="./extract-pg-schema.trigger.informationschemavalue.html">informationSchemaValue</a></p></td><td></td><td><p>InformationSchemaTrigger</p></td><td><p>Information schema value for the trigger.</p></td></tr><tr><td><p><a href="./extract-pg-schema.trigger.name.html">name</a></p></td><td></td><td><p>string</p></td><td><p>Name of the trigger.</p></td></tr><tr><td><p><a href="./extract-pg-schema.trigger.orientation.html">orientation</a></p></td><td></td><td><p>&quot;ROW&quot; | &quot;STATEMENT&quot;</p></td><td><p>Orientation: ROW or STATEMENT.</p></td></tr></tbody></table>',7)]))}const l=e(p,[["render",d]]);export{m as __pageData,l as default};
