import{_ as t,c as e,a0 as n,o as i}from"./chunks/framework.DZKAnWaX.js";const l=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/extract-pg-schema.informationschemacolumn.data_type.md","filePath":"api/extract-pg-schema.informationschemacolumn.data_type.md"}'),o={name:"api/extract-pg-schema.informationschemacolumn.data_type.md"};function s(r,a,c,m,p,h){return i(),e("div",null,a[0]||(a[0]=[n('<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.informationschemacolumn.html">InformationSchemaColumn</a> &gt; <a href="./extract-pg-schema.informationschemacolumn.data_type.html">data_type</a></p><h2 id="informationschemacolumn-data-type-property" tabindex="-1">InformationSchemaColumn.data_type property <a class="header-anchor" href="#informationschemacolumn-data-type-property" aria-label="Permalink to &quot;InformationSchemaColumn.data\\_type property&quot;">â€‹</a></h2><p>Data type of the column, if it is a built-in type, or ARRAY if it is some array (in that case, see the view element_types), else USER-DEFINED (in that case, the type is identified in udt_name and associated columns). If the column is based on a domain, this column refers to the type underlying the domain (and the domain is identified in domain_name and associated columns).</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string;</span></span></code></pre></div>',5)]))}const u=t(o,[["render",s]]);export{l as __pageData,u as default};
