import{_ as e,c as a,a0 as p,o as r}from"./chunks/framework.DZKAnWaX.js";const l=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/extract-pg-schema.compositetypeattribute.md","filePath":"api/extract-pg-schema.compositetypeattribute.md"}'),i={name:"api/extract-pg-schema.compositetypeattribute.md"};function d(o,t,s,h,n,c){return r(),a("div",null,t[0]||(t[0]=[p('<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.compositetypeattribute.html">CompositeTypeAttribute</a></p><h2 id="compositetypeattribute-interface" tabindex="-1">CompositeTypeAttribute interface <a class="header-anchor" href="#compositetypeattribute-interface" aria-label="Permalink to &quot;CompositeTypeAttribute interface&quot;">​</a></h2><p>Attribute of a composite type.</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CompositeTypeAttribute</span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table><thead><tr><th><p>Property</p></th><th><p>Modifiers</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p><a href="./extract-pg-schema.compositetypeattribute.comment.html">comment</a></p></td><td></td><td><p>string | null</p></td><td><p>Comment on the attribute.</p></td></tr><tr><td><p><a href="./extract-pg-schema.compositetypeattribute.defaultvalue.html">defaultValue</a></p></td><td></td><td><p>any</p></td><td><p>Default value of the attribute.</p></td></tr><tr><td><p><a href="./extract-pg-schema.compositetypeattribute.expandedtype.html">expandedType</a></p></td><td></td><td><p>string</p></td><td><p>Expanded type name. If the type is an array, brackets will be appended to the type name.</p></td></tr><tr><td><p><a href="./extract-pg-schema.compositetypeattribute.fakeinformationschemavalue.html">fakeInformationSchemaValue</a></p></td><td></td><td><p><a href="./extract-pg-schema.informationschemacolumn.html">InformationSchemaColumn</a></p></td><td><p>The Postgres information_schema views do not contain info about materialized views. This value is the result of a query that matches the one for regular views. Use with caution, not all fields are guaranteed to be meaningful and/or accurate.</p></td></tr><tr><td><p><a href="./extract-pg-schema.compositetypeattribute.generated.html">generated</a></p></td><td></td><td><p>&quot;ALWAYS&quot; | &quot;NEVER&quot; | &quot;BY DEFAULT&quot;</p></td><td><p>Behavior of the generated attribute. &quot;ALWAYS&quot; if always generated, &quot;NEVER&quot; if never generated, &quot;BY DEFAULT&quot; if generated when a value is not provided.</p></td></tr><tr><td><p><a href="./extract-pg-schema.compositetypeattribute.isarray.html">isArray</a></p></td><td></td><td><p>boolean</p></td><td><p>Whether the attribute is an array.</p></td></tr><tr><td><p><a href="./extract-pg-schema.compositetypeattribute.isidentity.html">isIdentity</a></p></td><td></td><td><p>boolean</p></td><td><p>Whether the attribute is an identity attribute.</p></td></tr><tr><td><p><a href="./extract-pg-schema.compositetypeattribute.isnullable.html">isNullable</a></p></td><td></td><td><p>boolean</p></td><td><p>Whether the attribute is nullable.</p></td></tr><tr><td><p><a href="./extract-pg-schema.compositetypeattribute.isupdatable.html">isUpdatable</a></p></td><td></td><td><p>boolean</p></td><td><p>Whether the attribute is updatable.</p></td></tr><tr><td><p><a href="./extract-pg-schema.compositetypeattribute.maxlength.html">maxLength</a></p></td><td></td><td><p>number | null</p></td><td><p>Maximum length of the attribute.</p></td></tr><tr><td><p><a href="./extract-pg-schema.compositetypeattribute.name.html">name</a></p></td><td></td><td><p>string</p></td><td><p>Attribute name.</p></td></tr><tr><td><p><a href="./extract-pg-schema.compositetypeattribute.ordinalposition.html">ordinalPosition</a></p></td><td></td><td><p>number</p></td><td><p>Ordinal position of the attribute in the composite type. Starts from 1.</p></td></tr><tr><td><p><a href="./extract-pg-schema.compositetypeattribute.type.html">type</a></p></td><td></td><td><p><a href="./extract-pg-schema.attributetype.html">AttributeType</a></p></td><td><p>Type information.</p></td></tr></tbody></table>',7)]))}const u=e(i,[["render",d]]);export{l as __pageData,u as default};
