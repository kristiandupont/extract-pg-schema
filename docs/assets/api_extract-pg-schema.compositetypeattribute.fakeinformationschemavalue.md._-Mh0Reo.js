import{_ as t,c as a,a0 as i,o}from"./chunks/framework.DZKAnWaX.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/extract-pg-schema.compositetypeattribute.fakeinformationschemavalue.md","filePath":"api/extract-pg-schema.compositetypeattribute.fakeinformationschemavalue.md"}'),r={name:"api/extract-pg-schema.compositetypeattribute.fakeinformationschemavalue.md"};function s(p,e,n,c,m,h){return o(),a("div",null,e[0]||(e[0]=[i('<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.compositetypeattribute.html">CompositeTypeAttribute</a> &gt; <a href="./extract-pg-schema.compositetypeattribute.fakeinformationschemavalue.html">fakeInformationSchemaValue</a></p><h2 id="compositetypeattribute-fakeinformationschemavalue-property" tabindex="-1">CompositeTypeAttribute.fakeInformationSchemaValue property <a class="header-anchor" href="#compositetypeattribute-fakeinformationschemavalue-property" aria-label="Permalink to &quot;CompositeTypeAttribute.fakeInformationSchemaValue property&quot;">â€‹</a></h2><p>The Postgres information_schema views do not contain info about materialized views. This value is the result of a query that matches the one for regular views. Use with caution, not all fields are guaranteed to be meaningful and/or accurate.</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fakeInformationSchemaValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: InformationSchemaColumn;</span></span></code></pre></div>',5)]))}const f=t(r,[["render",s]]);export{u as __pageData,f as default};
