import{_ as e,c as a,a0 as r,o as p}from"./chunks/framework.DZKAnWaX.js";const s=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/extract-pg-schema.tablecolumn.md","filePath":"api/extract-pg-schema.tablecolumn.md"}'),d={name:"api/extract-pg-schema.tablecolumn.md"};function n(l,t,o,m,c,h){return p(),a("div",null,t[0]||(t[0]=[r('<p><a href="./">Home</a> &gt; <a href="./extract-pg-schema.html">extract-pg-schema</a> &gt; <a href="./extract-pg-schema.tablecolumn.html">TableColumn</a></p><h2 id="tablecolumn-interface" tabindex="-1">TableColumn interface <a class="header-anchor" href="#tablecolumn-interface" aria-label="Permalink to &quot;TableColumn interface&quot;">​</a></h2><p>Column in a table.</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TableColumn</span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table><thead><tr><th><p>Property</p></th><th><p>Modifiers</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p><a href="./extract-pg-schema.tablecolumn.comment.html">comment</a></p></td><td></td><td><p>string | null</p></td><td><p>Comment on the column.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.defaultvalue.html">defaultValue</a></p></td><td></td><td><p>any</p></td><td><p>Default value of the column.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.dimensions.html">dimensions</a></p></td><td></td><td><p>number</p></td><td><p>Number of dimensions of the array type. 0 if not an array.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.expandedtype.html">expandedType</a></p></td><td></td><td><p>string</p></td><td><p>Expanded type name. If the type is an array, brackets will be appended to the type name.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.generated.html">generated</a></p></td><td></td><td><p>&quot;ALWAYS&quot; | &quot;NEVER&quot; | &quot;BY DEFAULT&quot;</p></td><td><p>Behavior of the generated column. &quot;ALWAYS&quot; if always generated, &quot;NEVER&quot; if never generated, &quot;BY DEFAULT&quot; if generated when value is not provided.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.indices.html">indices</a></p></td><td></td><td><p><a href="./extract-pg-schema.index.html">Index</a>[]</p></td><td></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.informationschemavalue.html">informationSchemaValue</a></p></td><td></td><td><p><a href="./extract-pg-schema.informationschemacolumn.html">InformationSchemaColumn</a></p></td><td><p>Information schema value for the column.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.isarray.html">isArray</a></p></td><td></td><td><p>boolean</p></td><td><p>Whether the column is an array.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.isidentity.html">isIdentity</a></p></td><td></td><td><p>boolean</p></td><td><p>Whether the column is an identity column.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.isnullable.html">isNullable</a></p></td><td></td><td><p>boolean</p></td><td><p>Whether the column is nullable.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.isprimarykey.html">isPrimaryKey</a></p></td><td></td><td><p>boolean</p></td><td><p>Whether the column is a primary key.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.isupdatable.html">isUpdatable</a></p></td><td></td><td><p>boolean</p></td><td><p>Whether the column is updatable.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.maxlength.html">maxLength</a></p></td><td></td><td><p>number | null</p></td><td><p>Maximum length of the column.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.name.html">name</a></p></td><td></td><td><p>string</p></td><td><p>Column name.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.ordinalposition.html">ordinalPosition</a></p></td><td></td><td><p>number</p></td><td><p>Ordinal position of the column in the table. Starts from 1.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.reference.html">reference</a></p></td><td></td><td><p><a href="./extract-pg-schema.columnreference.html">ColumnReference</a> | null</p></td><td></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.references.html">references</a></p></td><td></td><td><p><a href="./extract-pg-schema.columnreference.html">ColumnReference</a>[]</p></td><td><p>Array of references from this column.</p></td></tr><tr><td><p><a href="./extract-pg-schema.tablecolumn.type.html">type</a></p></td><td></td><td><p><a href="./extract-pg-schema.tablecolumntype.html">TableColumnType</a></p></td><td><p>Type information.</p></td></tr></tbody></table>',7)]))}const u=e(d,[["render",n]]);export{s as __pageData,u as default};
